rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    function isUserAuthenticated(uid) {
      return isAuthenticated() && uid == request.auth.uid;
    }
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /users/{uid} {
      allow get: if isUserAuthenticated(uid);
    }
    match /threads/{threadId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow delete: if isAuthenticated()
        && request.auth.uid == resource.data.uid
        || isAdmin();
    }
    match /comments/{commentId} {
      allow read: if true;
      allow create: if true;
      allow delete: if isAuthenticated()
        && request.auth.uid == get(/databases/$(database)/documents/threads/$(resource.data.thread_id)).data.uid
        || isAdmin();
    }
  }
}